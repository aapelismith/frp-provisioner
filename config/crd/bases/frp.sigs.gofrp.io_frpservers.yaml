---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: frpservers.frp.gofrp.io
spec:
  group: frp.gofrp.io
  names:
    kind: FrpServer
    listKind: FrpServerList
    plural: frpservers
    singular: frpserver
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: FrpServer is the Schema for the frpservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FrpServerSpec defines the desired state of FrpServer
            properties:
              auth:
                properties:
                  additionalScopes:
                    description: 'Specify whether to include auth info in additional
                      scope. Current supported scopes are: "HeartBeats", "NewWorkConns".'
                    items:
                      type: string
                    type: array
                  method:
                    description: Method specifies what authentication method to use
                      to authenticate frpc with frps. If "token" is specified - token
                      will be read into login message. If "oidc" is specified - OIDC
                      (Open ID Connect) token will be issued using OIDC settings.
                      By default, this value is "token".
                    type: string
                  oidc:
                    properties:
                      additionalEndpointParams:
                        additionalProperties:
                          type: string
                        description: AdditionalEndpointParams specifies additional
                          parameters to be sent this field will be transfer to map[string][]string
                          in OIDC token generator.
                        type: object
                      audience:
                        description: Audience specifies the audience of the token
                          in OIDC authentication.
                        type: string
                      clientID:
                        description: ClientID specifies the client ID to use to get
                          a token in OIDC authentication.
                        type: string
                      clientSecret:
                        description: ClientSecret specifies the client secret to use
                          to get a token in OIDC authentication.
                        type: string
                      scope:
                        description: Scope specifies the scope of the token in OIDC
                          authentication.
                        type: string
                      tokenEndpointURL:
                        description: TokenEndpointURL specifies the URL which implements
                          OIDC Token Endpoint. It will be used to get an OIDC token.
                        type: string
                    type: object
                  token:
                    description: Token specifies the authorization token used to create
                      keys to be sent to the server. The server must have a matching
                      token for authorization to succeed.  By default, this value
                      is "".
                    type: string
                type: object
              dnsServer:
                description: DNSServer specifies a DNS server address for FRPC to
                  use. If this value is "", the default DNS will be used.
                type: string
              externalIPs:
                description: ExternalIPs is an IP-based/DNS-based public entry point,
                  defaulting to the value of serverAddr
                items:
                  type: string
                type: array
              metadatas:
                additionalProperties:
                  type: string
                description: Client metadata info
                type: object
              natHoleStunServer:
                description: STUN server to help penetrate NAT hole.
                type: string
              serverAddr:
                description: ServerAddr specifies the address of the server to connect
                  to. By default, this value is "0.0.0.0".
                type: string
              serverPort:
                description: ServerPort specifies the port to connect to the server
                  on. By default, this value is 7000.
                type: integer
              transport:
                properties:
                  connectServerLocalIP:
                    description: 'ConnectServerLocalIP specifies the address of the
                      client bind when it connect to server. Note: This value only
                      use in TCP/Websocket protocol. Not support in KCP protocol.'
                    type: string
                  dialServerKeepalive:
                    description: DialServerKeepAlive specifies the interval between
                      keep-alive probes for an active network connection between frpc
                      and frps. If negative, keep-alive probes are disabled.
                    format: int64
                    type: integer
                  dialServerTimeout:
                    description: The maximum amount of time a dial to server will
                      wait for a connect to complete.
                    format: int64
                    type: integer
                  heartbeatInterval:
                    description: HeartBeatInterval specifies at what interval heartbeats
                      are sent to the server, in seconds. It is not recommended to
                      change this value. By default, this value is 30. Set negative
                      value to disable it.
                    format: int64
                    type: integer
                  heartbeatTimeout:
                    description: HeartBeatTimeout specifies the maximum allowed heartbeat
                      response delay before the connection is terminated, in seconds.
                      It is not recommended to change this value. By default, this
                      value is 90. Set negative value to disable it.
                    format: int64
                    type: integer
                  poolCount:
                    description: PoolCount specifies the number of connections the
                      client will make to the server in advance.
                    type: integer
                  protocol:
                    description: Protocol specifies the protocol to use when interacting
                      with the server. Valid values are "tcp", "kcp", "quic", "websocket"
                      and "wss". By default, this value is "tcp".
                    type: string
                  proxyURL:
                    description: ProxyURL specifies a proxy address to connect to
                      the server through. If this value is "", the server will be
                      connected directly. By default, this value is read from the
                      "http_proxy" environment variable.
                    type: string
                  quic:
                    description: QUIC protocol options.
                    properties:
                      keepalivePeriod:
                        type: integer
                      maxIdleTimeout:
                        type: integer
                      maxIncomingStreams:
                        type: integer
                    type: object
                  tcpMux:
                    description: TCPMux toggles TCP stream multiplexing. This allows
                      multiple requests from a client to share a single TCP connection.
                      If this value is true, the server must have TCP multiplexing
                      enabled as well. By default, this value is true.
                    type: boolean
                  tcpMuxKeepaliveInterval:
                    description: TCPMuxKeepaliveInterval specifies the keep alive
                      interval for TCP stream multipler. If TCPMux is true, heartbeat
                      of application layer is unnecessary because it can only rely
                      on heartbeat in TCPMux.
                    format: int64
                    type: integer
                  tls:
                    description: TLS specifies TLS settings for the connection to
                      the server.
                    properties:
                      disableCustomTLSFirstByte:
                        description: If DisableCustomTLSFirstByte is set to false,
                          frpc will establish a connection with frps using the first
                          custom byte when tls is enabled. Since v0.50.0, the default
                          value has been changed to true, and the first custom byte
                          is disabled by default.
                        type: boolean
                      enable:
                        description: TLSEnable specifies whether TLS should be used
                          when communicating with the server. If "tls.certFile" and
                          "tls.keyFile" are valid, client will load the supplied tls
                          configuration. Since v0.50.0, the default value has been
                          changed to true, and tls is enabled by default.
                        type: boolean
                      secretName:
                        description: SecretName specifies the name of the secret that
                          client will load.
                        type: string
                      serverName:
                        description: ServerName specifies the custom server name of
                          tls certificate. By default, server name if same to ServerAddr.
                        type: string
                      trustedCASecretName:
                        description: TrustedCASecretName specifies the secret name
                          of the trusted ca file that will load.
                        type: string
                    type: object
                  udpPacketSize:
                    description: UDPPacketSize specifies the udp packet size By default,
                      this value is 1500
                    format: int64
                    type: integer
                type: object
              user:
                description: User specifies a prefix for proxy names to distinguish
                  them from other clients. If this value is not "", proxy names will
                  automatically be changed to "{user}.{proxy_name}".
                type: string
            type: object
          status:
            description: FrpServerStatus defines the observed state of FrpServer
            properties:
              message:
                description: A human-readable message indicating details about why
                  the frpServer is in this phase.
                type: string
              observedGeneration:
                description: The generation observed by the frpServer controller.
                format: int64
                type: integer
              phase:
                description: Phase define observed state of cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
