---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: frpservers.frp.gofrp.io
spec:
  group: frp.gofrp.io
  names:
    kind: FrpServer
    listKind: FrpServerList
    plural: frpservers
    singular: frpserver
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: FrpServer is the Schema for the frpservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FrpServerSpec defines the desired state of FrpServer
            properties:
              auth:
                description: the auth config for current FrpServer
                properties:
                  additionalScopes:
                    description: 'AdditionalScopes specify whether to include auth
                      info in additional scope. Current supported scopes are: "HeartBeats",
                      "NewWorkConns".'
                    items:
                      description: FrpServerAuthScope is additional scope in auth
                        info
                      type: string
                    type: array
                  method:
                    description: Method specifies what authentication method to use
                      to authenticate frpc with frps. If "token" is specified - token
                      will be read into login message. If "oidc" is specified - OIDC
                      (Open ID Connect) token will be issued using OIDC settings.
                      By default, this value is "token".
                    type: string
                  oidc:
                    properties:
                      additionalEndpointParams:
                        additionalProperties:
                          type: string
                        description: AdditionalEndpointParams specifies additional
                          parameters to be sent this field will be transfer to map[string][]string
                          in OIDC token generator.
                        type: object
                      audience:
                        description: Audience specifies the audience of the token
                          in OIDC authentication.
                        type: string
                      clientID:
                        description: ClientID specifies the client ID to use to get
                          a token in OIDC authentication.
                        type: string
                      clientSecret:
                        description: ClientSecret specifies the client secret to use
                          to get a token in OIDC authentication.
                        type: string
                      scope:
                        description: Scope specifies the scope of the token in OIDC
                          authentication.
                        type: string
                      tokenEndpointURL:
                        description: TokenEndpointURL specifies the URL which implements
                          OIDC Token Endpoint. It will be used to get an OIDC token.
                        type: string
                    type: object
                  token:
                    description: Token specifies the authorization token used to create
                      keys to be sent to the server. The server must have a matching
                      token for authorization to succeed.  By default, this value
                      is "".
                    type: string
                type: object
              dnsServer:
                description: DNSServer specifies a DNS server address for FRPC to
                  use. If this value is "", the default DNS will be used.
                type: string
              externalIPs:
                description: ExternalIPs is set for load-balancer ingress points that
                  are DNS/IP based
                items:
                  type: string
                type: array
              loginFailExit:
                description: LoginFailExit controls whether the client should exit
                  after a failed login attempt. If false, the client will retry until
                  a login attempt succeeds. By default, this value is true.
                type: boolean
              metadatas:
                additionalProperties:
                  type: string
                description: Client metadata info
                type: object
              natHoleStunServer:
                description: STUN server to help penetrate NAT hole.
                type: string
              serverAddr:
                description: ServerAddr specifies the address of the server to connect
                  to. By default, this value is "0.0.0.0".
                type: string
              serverPort:
                description: ServerPort specifies the port to connect to the server
                  on. By default, this value is 7000.
                type: integer
              transport:
                properties:
                  connectServerLocalIP:
                    description: 'ConnectServerLocalIP specifies the address of the
                      client bind when it connect to server. Note: This value only
                      use in TCP/Websocket protocol. Not support in KCP protocol.'
                    type: string
                  dialServerKeepalive:
                    description: DialServerKeepAlive specifies the interval between
                      keep-alive probes for an active network connection between frpc
                      and frps. If negative, keep-alive probes are disabled.
                    format: int64
                    type: integer
                  dialServerTimeout:
                    description: The maximum amount of time a dial to server will
                      wait for a connect to complete.
                    format: int64
                    type: integer
                  heartbeatInterval:
                    description: HeartBeatInterval specifies at what interval heartbeats
                      are sent to the server, in seconds. It is not recommended to
                      change this value. By default, this value is 30. Set negative
                      value to disable it.
                    format: int64
                    type: integer
                  heartbeatTimeout:
                    description: HeartBeatTimeout specifies the maximum allowed heartbeat
                      response delay before the connection is terminated, in seconds.
                      It is not recommended to change this value. By default, this
                      value is 90. Set negative value to disable it.
                    format: int64
                    type: integer
                  poolCount:
                    description: PoolCount specifies the number of connections the
                      client will make to the server in advance.
                    type: integer
                  protocol:
                    description: Protocol specifies the protocol to use when interacting
                      with the server. Valid values are "tcp", "kcp", "quic", "websocket"
                      and "wss". By default, this value is "tcp".
                    type: string
                  proxyURL:
                    description: ProxyURL specifies a proxy address to connect to
                      the server through. If this value is "", the server will be
                      connected directly. By default, this value is read from the
                      "http_proxy" environment variable.
                    type: string
                  quic:
                    description: QUIC protocol options.
                    properties:
                      keepalivePeriod:
                        type: integer
                      maxIdleTimeout:
                        type: integer
                      maxIncomingStreams:
                        type: integer
                    type: object
                  tcpMux:
                    description: TCPMux toggles TCP stream multiplexing. This allows
                      multiple requests from a client to share a single TCP connection.
                      If this value is true, the server must have TCP multiplexing
                      enabled as well. By default, this value is true.
                    type: boolean
                  tcpMuxKeepaliveInterval:
                    description: TCPMuxKeepaliveInterval specifies the keep alive
                      interval for TCP stream multipler. If TCPMux is true, heartbeat
                      of application layer is unnecessary because it can only rely
                      on heartbeat in TCPMux.
                    format: int64
                    type: integer
                  tls:
                    description: TLS specifies TLS settings for the connection to
                      the server.
                    properties:
                      caFileName:
                        description: CaFileName specifies the filename of the trusted
                          ca file on secretRef.
                        type: string
                      certFileName:
                        description: CertFileName specifies the filename of the cert
                          file on secretRef.
                        type: string
                      disableCustomTLSFirstByte:
                        description: If DisableCustomTLSFirstByte is set to false,
                          frpc will establish a connection with frps using the first
                          custom byte when tls is enabled. Since v0.50.0, the default
                          value has been changed to true, and the first custom byte
                          is disabled by default.
                        type: boolean
                      enable:
                        description: Enable specifies whether TLS should be used when
                          communicating with the server. If "tls.certFile" and "tls.keyFile"
                          are valid, client will load the supplied tls configuration.
                          Since v0.50.0, the default value has been changed to true,
                          and tls is enabled by default.
                        type: boolean
                      keyFileName:
                        description: KeyFileName specifies the filename of the secret
                          key file on secretRef.
                        type: string
                      secretRef:
                        description: SecretRef is name of the tls secret for transport.
                          It provided tls key, cert and CA file
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      serverName:
                        description: ServerName specifies the custom server name of
                          tls certificate. By default, server name if same to ServerAddr.
                        type: string
                    type: object
                type: object
              udpPacketSize:
                description: UDPPacketSize specifies the udp packet size By default,
                  this value is 1500
                format: int64
                type: integer
              user:
                description: User specifies a prefix for proxy names to distinguish
                  them from other clients. If this value is not "", proxy names will
                  automatically be changed to "{user}.{proxy_name}".
                type: string
            type: object
          status:
            description: FrpServerStatus defines the observed state of FrpServer
            properties:
              conditions:
                description: Current service state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              phase:
                description: The phase of a FrpServer is a simple, high-level summary
                  of where the FrpServer is in its lifecycle.
                type: string
              reason:
                description: Reason A brief CamelCase message indicating details about
                  why the pod is in this state.
                type: string
              serviceReferences:
                description: Services is a list of all services
                items:
                  properties:
                    apiGroup:
                      description: APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in
                        the core API group. For any other third-party types, APIGroup
                        is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                    namespace:
                      description: Namespace is the namespace of resource being referenced
                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                        object is required in the referent namespace to allow that
                        namespace's owner to accept the reference. See the ReferenceGrant
                        documentation for details. (Alpha) This field requires the
                        CrossNamespaceVolumeDataSource feature gate to be enabled.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
