apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: frp-provisioner
    control-plane: controller-manager
  name: frp-provisioner-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: frpservers.frp.gofrp.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: frp-provisioner-webhook-service
          namespace: frp-provisioner-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: frp.gofrp.io
  names:
    kind: FrpServer
    listKind: FrpServerList
    plural: frpservers
    singular: frpserver
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: FrpServer is the Schema for the frpservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FrpServerSpec defines the desired state of FrpServer
            properties:
              auth:
                description: the auth config for current FrpServer
                properties:
                  additionalScopes:
                    description: 'AdditionalScopes specify whether to include auth
                      info in additional scope. Current supported scopes are: "HeartBeats",
                      "NewWorkConns".'
                    items:
                      description: FrpServerAuthScope is additional scope in auth
                        info
                      type: string
                    type: array
                  method:
                    description: Method specifies what authentication method to use
                      to authenticate frpc with frps. If "token" is specified - token
                      will be read into login message. If "oidc" is specified - OIDC
                      (Open ID Connect) token will be issued using OIDC settings.
                      By default, this value is "token".
                    type: string
                  oidc:
                    properties:
                      additionalEndpointParams:
                        additionalProperties:
                          type: string
                        description: AdditionalEndpointParams specifies additional
                          parameters to be sent this field will be transfer to map[string][]string
                          in OIDC token generator.
                        type: object
                      audience:
                        description: Audience specifies the audience of the token
                          in OIDC authentication.
                        type: string
                      clientID:
                        description: ClientID specifies the client ID to use to get
                          a token in OIDC authentication.
                        type: string
                      clientSecret:
                        description: ClientSecret specifies the client secret to use
                          to get a token in OIDC authentication.
                        type: string
                      scope:
                        description: Scope specifies the scope of the token in OIDC
                          authentication.
                        type: string
                      tokenEndpointURL:
                        description: TokenEndpointURL specifies the URL which implements
                          OIDC Token Endpoint. It will be used to get an OIDC token.
                        type: string
                    type: object
                  token:
                    description: Token specifies the authorization token used to create
                      keys to be sent to the server. The server must have a matching
                      token for authorization to succeed.  By default, this value
                      is "".
                    type: string
                type: object
              dnsServer:
                description: DNSServer specifies a DNS server address for FRPC to
                  use. If this value is "", the default DNS will be used.
                type: string
              loginFailExit:
                description: LoginFailExit controls whether the client should exit
                  after a failed login attempt. If false, the client will retry until
                  a login attempt succeeds. By default, this value is true.
                type: boolean
              metadatas:
                additionalProperties:
                  type: string
                description: Client metadata info
                type: object
              natHoleStunServer:
                description: STUN server to help penetrate NAT hole.
                type: string
              serverAddr:
                description: ServerAddr specifies the address of the server to connect
                  to. By default, this value is "0.0.0.0".
                type: string
              serverPort:
                description: ServerPort specifies the port to connect to the server
                  on. By default, this value is 7000.
                type: integer
              transport:
                properties:
                  connectServerLocalIP:
                    description: 'ConnectServerLocalIP specifies the address of the
                      client bind when it connect to server. Note: This value only
                      use in TCP/Websocket protocol. Not support in KCP protocol.'
                    type: string
                  dialServerKeepalive:
                    description: DialServerKeepAlive specifies the interval between
                      keep-alive probes for an active network connection between frpc
                      and frps. If negative, keep-alive probes are disabled.
                    format: int64
                    type: integer
                  dialServerTimeout:
                    description: The maximum amount of time a dial to server will
                      wait for a connect to complete.
                    format: int64
                    type: integer
                  heartbeatInterval:
                    description: HeartBeatInterval specifies at what interval heartbeats
                      are sent to the server, in seconds. It is not recommended to
                      change this value. By default, this value is 30. Set negative
                      value to disable it.
                    format: int64
                    type: integer
                  heartbeatTimeout:
                    description: HeartBeatTimeout specifies the maximum allowed heartbeat
                      response delay before the connection is terminated, in seconds.
                      It is not recommended to change this value. By default, this
                      value is 90. Set negative value to disable it.
                    format: int64
                    type: integer
                  poolCount:
                    description: PoolCount specifies the number of connections the
                      client will make to the server in advance.
                    type: integer
                  protocol:
                    description: Protocol specifies the protocol to use when interacting
                      with the server. Valid values are "tcp", "kcp", "quic", "websocket"
                      and "wss". By default, this value is "tcp".
                    type: string
                  proxyURL:
                    description: ProxyURL specifies a proxy address to connect to
                      the server through. If this value is "", the server will be
                      connected to directly. By default, this value is read from the
                      "http_proxy" environment variable.
                    type: string
                  quic:
                    description: QUIC protocol options.
                    properties:
                      keepalivePeriod:
                        type: integer
                      maxIdleTimeout:
                        type: integer
                      maxIncomingStreams:
                        type: integer
                    type: object
                  tcpMux:
                    description: TCPMux toggles TCP stream multiplexing. This allows
                      multiple requests from a client to share a single TCP connection.
                      If this value is true, the server must have TCP multiplexing
                      enabled as well. By default, this value is true.
                    type: boolean
                  tcpMuxKeepaliveInterval:
                    description: TCPMuxKeepaliveInterval specifies the keep alive
                      interval for TCP stream multipler. If TCPMux is true, heartbeat
                      of application layer is unnecessary because it can only rely
                      on heartbeat in TCPMux.
                    format: int64
                    type: integer
                  tls:
                    description: TLS specifies TLS settings for the connection to
                      the server.
                    properties:
                      disableCustomTLSFirstByte:
                        description: If DisableCustomTLSFirstByte is set to false,
                          frpc will establish a connection with frps using the first
                          custom byte when tls is enabled. Since v0.50.0, the default
                          value has been changed to true, and the first custom byte
                          is disabled by default.
                        type: boolean
                      enable:
                        description: TLSEnable specifies whether TLS should be used
                          when communicating with the server. If "tls.certFile" and
                          "tls.keyFile" are valid, client will load the supplied tls
                          configuration. Since v0.50.0, the default value has been
                          changed to true, and tls is enabled by default.
                        type: boolean
                      secretRef:
                        description: secretRef is name of the tls secret for transport.
                          If provided tls key and cert
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      serverName:
                        description: ServerName specifies the custom server name of
                          tls certificate. By default, server name if same to ServerAddr.
                        type: string
                      trustedCaSecretRef:
                        description: TrustedCaSecretRef is name of the tls trusted
                          ca for transport.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                type: object
              udpPacketSize:
                description: UDPPacketSize specifies the udp packet size By default,
                  this value is 1500
                format: int64
                type: integer
              user:
                description: User specifies a prefix for proxy names to distinguish
                  them from other clients. If this value is not "", proxy names will
                  automatically be changed to "{user}.{proxy_name}".
                type: string
            type: object
          status:
            description: FrpServerStatus defines the observed state of FrpServer
            properties:
              phase:
                description: The phase of a FrpServer is a simple, high-level summary
                  of where the FrpServer is in its lifecycle.
                type: string
              reason:
                description: Reason A brief CamelCase message indicating details about
                  why the pod is in this state.
                type: string
              serviceReferences:
                description: Services is a list of all services
                items:
                  properties:
                    apiGroup:
                      description: APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in
                        the core API group. For any other third-party types, APIGroup
                        is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                    namespace:
                      description: Namespace is the namespace of resource being referenced
                        Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                        object is required in the referent namespace to allow that
                        namespace's owner to accept the reference. See the ReferenceGrant
                        documentation for details. (Alpha) This field requires the
                        CrossNamespaceVolumeDataSource feature gate to be enabled.
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                type: array
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-controller-manager
  namespace: frp-provisioner-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-leader-election-role
  namespace: frp-provisioner-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: frp-provisioner-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - frp.gofrp.io
  resources:
  - frpservers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - frp.gofrp.io
  resources:
  - frpservers/finalizers
  verbs:
  - update
- apiGroups:
  - frp.gofrp.io
  resources:
  - frpservers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-leader-election-rolebinding
  namespace: frp-provisioner-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: frp-provisioner-leader-election-role
subjects:
- kind: ServiceAccount
  name: frp-provisioner-controller-manager
  namespace: frp-provisioner-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: frp-provisioner-manager-role
subjects:
- kind: ServiceAccount
  name: frp-provisioner-controller-manager
  namespace: frp-provisioner-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: frp-provisioner-proxy-role
subjects:
- kind: ServiceAccount
  name: frp-provisioner-controller-manager
  namespace: frp-provisioner-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: frp-provisioner
    control-plane: controller-manager
  name: frp-provisioner-controller-manager-metrics-service
  namespace: frp-provisioner-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: frp-provisioner
  name: frp-provisioner-webhook-service
  namespace: frp-provisioner-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: frp-provisioner
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: frp-provisioner
    control-plane: controller-manager
  name: frp-provisioner-controller-manager
  namespace: frp-provisioner-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: frp-provisioner-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: frp-provisioner-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: frp-provisioner-webhook-service
      namespace: frp-provisioner-system
      path: /mutate-frp-gofrp-io-v1beta1-frpserver
  failurePolicy: Fail
  name: mfrpserver.kb.io
  rules:
  - apiGroups:
    - frp.gofrp.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - frpservers
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: frp-provisioner-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: frp-provisioner-webhook-service
      namespace: frp-provisioner-system
      path: /validate-frp-gofrp-io-v1beta1-frpserver
  failurePolicy: Fail
  name: vfrpserver.kb.io
  rules:
  - apiGroups:
    - frp.gofrp.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - frpservers
  sideEffects: None
